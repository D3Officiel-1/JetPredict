

'use client';

import { useState, useEffect, useRef, useCallback }
from 'react';
import { getAuth, onAuthStateChanged, User, signOut } from 'firebase/auth';
import { doc, updateDoc, onSnapshot, getDoc, collection, query, where } from "firebase/firestore";
import { app, db, requestForToken, onMessageListener } from '@/lib/firebase';
import { useRouter } from 'next/navigation';
import Image from 'next/image';
import { motion, AnimatePresence } from 'framer-motion';

import { CrashPredictorDashboard } from '@/components/crash-predictor-dashboard';
import { Button } from '@/components/ui/button';
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from '@/components/ui/dropdown-menu';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { LogOut, Settings, User as UserIcon, Beaker, Bell, LifeBuoy, Loader2, Users, ShieldAlert, HelpCircle, StepForward, Target, Lightbulb, Gamepad2, Wallet, BrainCircuit, PiggyBank, BarChart, TrendingUp, TrendingDown, Repeat, Sigma, PieChart, Waypoints, Goal, StopCircle, CloudFog, Combine, Trophy, ShieldCheck, PauseCircle, Wrench, Table as TableIcon, MoreVertical, X, Plus } from 'lucide-react';
import Link from 'next/link';
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';
import type { PlanId } from '@/types';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { TelegramIcon, WhatsAppIcon } from '@/components/icons';
import { useToast } from '@/hooks/use-toast';
import { SinglePrediction } from '@/types';


const GuideStep = ({ icon, title, description }: { icon: React.ReactNode, title: string, description: string }) => (
    <div className="flex items-start gap-4">
        <div className="flex h-10 w-10 items-center justify-center rounded-lg bg-primary/10 text-primary shrink-0 mt-1">
            {icon}
        </div>
        <div>
            <h3 className="font-semibold text-foreground">{title}</h3>
            <p className="text-sm text-muted-foreground">{description}</p>
        </div>
    </div>
);

const StrategyGuideStep = ({ icon, title, children }: { icon: React.ReactNode, title: string, children: React.ReactNode }) => (
    <div className="flex items-start gap-4 p-4 bg-muted/50 rounded-lg border border-border/50">
        <div className="text-primary mt-1">{icon}</div>
        <div>
            <h3 className="font-semibold text-foreground">{title}</h3>
            <div className="text-sm text-muted-foreground prose prose-p:my-1">{children}</div>
        </div>
    </div>
);

export default function PredictPage() {
  const [user, setUser] = useState<User | null>(null);
  const [userData, setUserData] = useState<{ notificationSettings?: { alertsEnabled?: boolean, soundEnabled?: boolean, vibrationEnabled?: boolean } } | null>(null);
  const [planId, setPlanId] = useState<PlanId | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [unreadCount, setUnreadCount] = useState(0);
  const [isFabMenuOpen, setIsFabMenuOpen] = useState(false);
  const auth = getAuth(app);
  const router = useRouter();
  const { toast } = useToast();
  const notifiedPredictions = useRef(new Set());


  useEffect(() => {
    if (user) {
        requestForToken(user);
    }
    
    if ('Notification' in window) {
      onMessageListener()
        .then((payload: any) => {
          toast({
              title: payload.notification.title,
              description: payload.notification.body,
              variant: 'default',
          });
        })
        .catch((err) => console.log('failed: ', err));
    }
  }, [user, toast]);
  
  const checkPredictionsForNotifications = useCallback(() => {
    const event = new CustomEvent('checkPredictions');
    window.dispatchEvent(event);
  }, []);

  useEffect(() => {
    const interval = setInterval(() => {
      checkPredictionsForNotifications();
    }, 1000);
    return () => clearInterval(interval);
  }, [checkPredictionsForNotifications]);

  useEffect(() => {
    const unsubscribeAuth = onAuthStateChanged(auth, (currentUser) => {
      if (!currentUser) {
        router.push('/login');
        return;
      }
      
      if (!currentUser.emailVerified) {
        router.push('/verify-email');
        return;
      }

      let unsubscribeMaintenance: () => void;
      let unsubscribePricing: () => void;
      let unsubscribeNotifications: () => void;
      let unsubscribeUserData: () => void;
      
      const maintenanceDocRef = doc(db, "applications", "VMrS6ltRDuKImzxAl3lR");

      unsubscribeMaintenance = onSnapshot(maintenanceDocRef, async (maintenanceDoc) => {
          if (maintenanceDoc.exists()) {
              const appData = maintenanceDoc.data();
              if (appData.status === true) {
                  router.push('/maintenance');
                  return;
              }
              if (appData.maintenanceConfig?.status === true) {
                  const targetUsers = appData.maintenanceConfig.targetUsers || [];
                  if (targetUsers.length === 0) {
                      router.push('/maintenance');
                      return;
                  }
                  const pricingDoc = await getDoc(doc(db, "users", currentUser.uid, "pricing", "jetpredict"));
                  if (pricingDoc.exists() && targetUsers.includes(pricingDoc.data().idplan_jetpredict)) {
                      router.push('/maintenance');
                      return;
                  }
              }
          }

          const pricingDocRef = doc(db, "users", currentUser.uid, "pricing", "jetpredict");
          
          if (unsubscribePricing) unsubscribePricing();

          unsubscribePricing = onSnapshot(pricingDocRef, async (pricingDoc) => {
            if (pricingDoc.exists()) {
                const pricingData = pricingDoc.data();
                if (pricingData.actif_jetpredict === true && pricingData.findate?.toDate() > new Date()) {
                    setUser(currentUser);
                    setPlanId(pricingData.idplan_jetpredict);
                    setIsLoading(false);
                } else {
                    if (pricingData.actif_jetpredict === true) await updateDoc(pricingDocRef, { actif_jetpredict: false });
                    router.push('/pricing');
                }
            } else {
              router.push('/pricing');
            }
          }, (error) => {
            console.error("Erreur de tarification:", error);
            router.push('/login');
          });

      }, (error) => {
          console.error("Erreur de maintenance:", error);
          router.push('/login');
      });

      const personalNotificationsRef = collection(db, 'users', currentUser.uid, 'notifications');
      const qPersonal = query(personalNotificationsRef, where('isRead', '==', false));
      unsubscribeNotifications = onSnapshot(qPersonal, (snapshot) => {
          setUnreadCount(snapshot.size);
      });
      
      const userDocRef = doc(db, "users", currentUser.uid);
      unsubscribeUserData = onSnapshot(userDocRef, (doc) => {
          if (doc.exists()) {
              setUserData(doc.data());
          }
      });


      return () => {
          if (unsubscribeMaintenance) unsubscribeMaintenance();
          if (unsubscribePricing) unsubscribePricing();
          if (unsubscribeNotifications) unsubscribeNotifications();
          if (unsubscribeUserData) unsubscribeUserData();
      };
    });

     const handleBeforeUnload = async (e: BeforeUnloadEvent) => {
      if (auth.currentUser) {
        await updateDoc(doc(db, "users", auth.currentUser.uid), { isOnline: false });
      }
    };

    window.addEventListener('beforeunload', handleBeforeUnload);

    return () => {
      unsubscribeAuth();
      window.removeEventListener('beforeunload', handleBeforeUnload);
    };
  }, [auth, router]);

  const handleLogout = async () => {
    if (auth.currentUser) {
      const userDocRef = doc(db, "users", auth.currentUser.uid);
      await updateDoc(userDocRef, { isOnline: false });
    }
    await signOut(auth);
    router.push('/login');
  };
  
  const getInitials = (email: string | null | undefined) => {
    if (user?.displayName) {
      return user.displayName.substring(0, 2).toUpperCase();
    }
    return email ? email.substring(0, 2).toUpperCase() : '??';
  };
  
  const isVerified = user?.emailVerified === true;
  const canAccessPremiumFeatures = planId === 'weekly' || planId === 'monthly';
  const canAccessSupport = planId === 'monthly';


  if (isLoading || !user || !planId) {
    return (
      <div className="flex min-h-screen w-full flex-col bg-background items-center justify-center text-center p-4">
        <Image src="https://i.postimg.cc/jS25XGKL/Capture-d-cran-2025-09-03-191656-4-removebg-preview.png" alt="Loading..." width={100} height={100} className="animate-pulse" priority />
        <p className="mt-4 text-muted-foreground">VÃ©rification de l'abonnement...</p>
      </div>
    );
  }

    const fabMenuVariants = {
        open: {
            transition: { staggerChildren: 0.1, delayChildren: 0.2 }
        },
        closed: {
            transition: { staggerChildren: 0.05, staggerDirection: -1 }
        }
    };

    const fabItemVariants = {
        open: (i: number) => ({
            y: -80 * (i + 1),
            opacity: 1,
            transition: {
                y: { stiffness: 1000, velocity: -100 }
            }
        }),
        closed: {
            y: 0,
            opacity: 0,
            transition: {
                y: { stiffness: 1000 }
            }
        }
    };

  return (
    <div className="flex min-h-screen w-full flex-col bg-background">
      <header className="sticky top-0 z-30 flex h-16 items-center justify-between gap-4 border-b bg-background/80 px-4 backdrop-blur-sm md:px-8">
        <div className="flex items-center gap-4">
          <Image src="https://i.postimg.cc/jS25XGKL/Capture-d-cran-2025-09-03-191656-4-removebg-preview.png" alt="JetPredict Logo" width={36} height={36} className="h-9 w-auto rounded-md" style={{ width: 'auto' }} />
          <h1 className="font-headline text-xl font-bold text-primary">
            JetPredict
          </h1>
        </div>
        <DropdownMenu>
            <TooltipProvider>
              <Tooltip>
                <TooltipTrigger asChild>
                    <DropdownMenuTrigger asChild>
                        <Button variant="ghost" className="relative h-8 w-8 rounded-full">
                          <Avatar className="h-9 w-9">
                            <AvatarImage src={user.photoURL ?? ''} alt="Avatar" />
                            <AvatarFallback>{getInitials(user.email)}</AvatarFallback>
                          </Avatar>
                           {unreadCount > 0 && <span className="premium-notification-pulse"></span>}
                           {!isVerified && (
                              <span className="absolute bottom-0 right-0 block h-2.5 w-2.5 rounded-full bg-destructive ring-2 ring-background" />
                          )}
                        </Button>
                    </DropdownMenuTrigger>
                </TooltipTrigger>
                {unreadCount > 0 && (
                   <TooltipContent>
                      <p>Vous avez {unreadCount} notification(s) non lue(s)</p>
                   </TooltipContent>
                )}
                 {!isVerified && (
                  <TooltipContent>
                      <p>Veuillez vÃ©rifier votre email</p>
                  </TooltipContent>
                 )}
            </Tooltip>
          </TooltipProvider>

          <DropdownMenuContent className="w-56" align="end" forceMount>
            <DropdownMenuLabel className="font-normal">
              <div className="flex flex-col space-y-1">
                <p className="text-sm font-medium leading-none">{user.displayName || 'Mon Compte'}</p>
                <p className="text-xs leading-none text-muted-foreground">
                  {user.email}
                </p>
              </div>
            </DropdownMenuLabel>
             {!isVerified && (
                  <DropdownMenuItem asChild>
                      <Link href="/verify-email" className="text-destructive focus:bg-destructive/10 focus:text-destructive">
                          <ShieldAlert className="mr-2 h-4 w-4" />
                          <span>Email non vÃ©rifiÃ©</span>
                      </Link>
                  </DropdownMenuItem>
              )}
            <DropdownMenuSeparator />
            <DropdownMenuItem asChild disabled={!isVerified}>
              <Link href="/notification">
                <Bell className="mr-2 h-4 w-4" />
                <span>Notifications</span>
                 {unreadCount > 0 && <span className="notification-dot"></span>}
              </Link>
            </DropdownMenuItem>
            <DropdownMenuItem asChild disabled={!isVerified}>
              <Link href="/profile">
                <UserIcon className="mr-2 h-4 w-4" />
                <span>Profil</span>
              </Link>
            </DropdownMenuItem>
            <DropdownMenuItem asChild disabled={!isVerified}>
              <Link href="/referral">
                <Users className="mr-2 h-4 w-4" />
                <span>Parrainage</span>
              </Link>
            </DropdownMenuItem>
             <DropdownMenuItem asChild disabled={!isVerified || !canAccessPremiumFeatures}>
                <Link href="/simulation">
                    <Beaker className="mr-2 h-4 w-4" />
                    <span>Simulation</span>
                </Link>
            </DropdownMenuItem>
            <DropdownMenuItem asChild disabled={!isVerified}>
              <Link href="/settings">
                <Settings className="mr-2 h-4 w-4" />
                <span>ParamÃ¨tres</span>
              </Link>
            </DropdownMenuItem>
            <DropdownMenuItem asChild disabled={!isVerified || !canAccessSupport}>
              <Link href="/support">
                <LifeBuoy className="mr-2 h-4 w-4" />
                <span>Support</span>
              </Link>
            </DropdownMenuItem>
            <DropdownMenuSeparator />
             <DropdownMenuItem onClick={handleLogout}>
                <LogOut className="mr-2 h-4 w-4" />
                <span>Se dÃ©connecter</span>
              </DropdownMenuItem>
          </DropdownMenuContent>
        </DropdownMenu>
      </header>
      <main className="flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-8">
        <CrashPredictorDashboard planId={planId} notificationSettings={userData?.notificationSettings} />
      </main>

       <motion.div
        className="fixed bottom-4 right-4 md:bottom-8 md:right-8 z-40"
        initial="closed"
        animate={isFabMenuOpen ? "open" : "closed"}
    >
        <AnimatePresence>
            {isFabMenuOpen && (
                <motion.div variants={fabMenuVariants} className="flex flex-col items-center absolute bottom-0 right-0">
                    <motion.div variants={fabItemVariants} custom={2} className="absolute bottom-0 right-0">
                        <TooltipProvider>
                            <Tooltip>
                                <TooltipTrigger asChild>
                                    <a href="https://www.whatsapp.com/channel/0029VbBc22V4yltHAKWD0R2x" target="_blank" rel="noopener noreferrer">
                                        <Button className="h-14 w-14 rounded-full bg-gradient-to-br from-green-500 to-teal-500 text-white shadow-lg shadow-green-500/40">
                                            <WhatsAppIcon className="h-7 w-7" />
                                        </Button>
                                    </a>
                                </TooltipTrigger>
                                <TooltipContent><p>Rejoindre la chaÃ®ne WhatsApp</p></TooltipContent>
                            </Tooltip>
                         </TooltipProvider>
                    </motion.div>
                    <motion.div variants={fabItemVariants} custom={1} className="absolute bottom-0 right-0">
                        <TooltipProvider>
                            <Tooltip>
                                <TooltipTrigger asChild>
                                    <Dialog>
                                        <DialogTrigger asChild>
                                            <Button className="h-14 w-14 rounded-full bg-gradient-to-br from-indigo-500 to-purple-500 text-white shadow-lg shadow-indigo-500/40">
                                                <HelpCircle className="h-7 w-7" />
                                            </Button>
                                        </DialogTrigger>
                                        <DialogContent className="max-w-2xl">
                                            <DialogHeader>
                                                <DialogTitle className="text-2xl">Guide d'utilisation</DialogTitle>
                                                <DialogDescription>
                                                    Suivez ces Ã©tapes pour optimiser vos gains.
                                                </DialogDescription>
                                            </DialogHeader>
                                            <Tabs defaultValue="app_guide">
                                                <TabsList className="grid w-full grid-cols-2">
                                                    <TabsTrigger value="app_guide">Guide de l'App</TabsTrigger>
                                                    <TabsTrigger value="strategy_guide">StratÃ©gies de Jeu</TabsTrigger>
                                                </TabsList>
                                                <TabsContent value="app_guide" className="pt-4">
                                                    <div className="grid gap-6">
                                                        <GuideStep icon={<StepForward />} title="1. Choisissez votre risque" description="SÃ©lectionnez un niveau de risque. Votre forfait dÃ©termine les niveaux auxquels vous avez accÃ¨s."/>
                                                        <GuideStep icon={<Gamepad2 />} title="2. Saisissez l'historique" description="Copiez et collez l'historique des derniers crashs depuis votre jeu. SÃ©parez les valeurs par un espace ou une virgule."/>
                                                        <GuideStep icon={<Target />} title="3. Lancez la prÃ©diction" description="Cliquez sur 'PrÃ©dire'. Notre IA analysera les donnÃ©es et gÃ©nÃ©rera une liste de prÃ©dictions pour les minutes Ã  venir."/>
                                                        <GuideStep icon={<Lightbulb />} title="4. Obtenez des stratÃ©gies" description="Cliquez sur une prÃ©diction pour l'afficher en grand et obtenir des stratÃ©gies de pari (fonctionnalitÃ© premium)."/>
                                                    </div>
                                                </TabsContent>
                                                <TabsContent value="strategy_guide" className="pt-4 max-h-[60vh] overflow-y-auto">
                                                <div className="space-y-4">
                                                    <StrategyGuideStep icon={<BrainCircuit />} title="1. Comprendre le principe"><p>Les jeux crash comme Aviator ou Lucky Jet fonctionnent sur un multiplicateur qui monte progressivement Ã  partir de 1x. ð</p><p>Chaque tour commence avec une mise et le multiplicateur augmente jusquâÃ  ce quâil "crash" de maniÃ¨re alÃ©atoire. ð¥</p><p>Ton objectif est de retirer avant que le multiplicateur sâeffondre, sinon tu perds toute ta mise. ð¯</p><p>Câest un jeu de hasard pur, mais avec observation et timing, tu peux gÃ©rer ton risque. ð</p><p>Le multiplicateur peut Ãªtre trÃ¨s bas ou atteindre des valeurs trÃ¨s Ã©levÃ©es (>10x). ð</p><p>Comprendre ce mÃ©canisme est la premiÃ¨re Ã©tape avant de commencer Ã  miser sÃ©rieusement. â</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<PiggyBank />} title="2. Commencer petit"><p>Avant de miser gros, teste toujours le jeu avec de petites mises. ð¤</p><p>Exemple : 200â500â¯FCFA par tour pour un capital initial de 50 000â¯FCFA. ð°</p><p>Cela te permet de comprendre la vitesse de montÃ©e du multiplicateur et le timing optimal du retrait. â±ï¸</p><p>Les petits tours servent aussi Ã  observer les tendances et le comportement du jeu. ð</p><p>Tu peux noter combien de tours finissent en crash bas et combien atteignent un multiplicateur Ã©levÃ©. ð</p><p>Commencer petit limite ton risque et tâapprend Ã  jouer intelligemment.ð§ </p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<Wallet />} title="3. Fixer un capital"><p>DÃ©termine exactement combien tu es prÃªt Ã  jouer pour une session. ð¦</p><p>Exemple : capital = 50â¯000â¯FCFA pour 1 journÃ©e de jeu. ð</p><p>Ne dÃ©passe jamais ce capital pour Ã©viter de tout perdre sur une mauvaise sÃ©rie. ð«</p><p>Divise ce capital en petites portions pour chaque tour afin de mieux contrÃ´ler les mises. ð°</p><p>Cela tâÃ©vite de te retrouver Ã  miser tout ton argent en une seule fois par frustration ou excÃ¨s de confiance. ð¤</p><p>Un capital clair permet de suivre tes gains et pertes plus efficacement. ð</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<ShieldCheck />} title="4. Mise sÃ©curisÃ©e"><p>Pour sÃ©curiser tes gains, retire toujours Ã  des multiplicateurs bas mais fiables. ð¡ï¸</p><p>Exemple : mise 500â¯FCFA â retirer Ã  1,8x â gain 900â¯FCFA. â</p><p>Cela permet dâaccumuler des profits constants mÃªme si les gros multiplicateurs restent rares. ð</p><p>Cette stratÃ©gie est parfaite pour dÃ©buter et protÃ©ger ton capital. âï¸</p><p>Elle rÃ©duit le stress, car tu nâas pas Ã  courir aprÃ¨s des jackpots risquÃ©s. ð</p><p>Elle te permet aussi de tester diffÃ©rentes tendances sans mettre ton capital en danger. ð</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<BarChart />} title="5. Retrait moyen"><p>Vise un multiplicateur intermÃ©diaire pour un Ã©quilibre risque/gain. âï¸</p><p>Exemple : mise 500â¯FCFA â retirer Ã  3x â gain 1â¯500â¯FCFA. ð°</p><p>Câest une stratÃ©gie pour ceux qui veulent un peu plus de profit sans prendre de gros risques. ð¬</p><p>Elle fonctionne mieux si tu observes des tendances dans les multiplicateurs. ð</p><p>Tu peux combiner ce retrait moyen avec des petites mises sÃ©curisÃ©es pour diversifier tes gains. ð¤</p><p>Câest une Ã©tape intermÃ©diaire avant dâattaquer les multiplicateurs Ã©levÃ©s et risquÃ©s. âï¸</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<TrendingUp />} title="6. Retrait risquÃ©"><p>Viser les multiplicateurs Ã©levÃ©s (>5x) peut rapporter gros mais est trÃ¨s dangereux. ð£</p><p>Exemple : mise 500â¯FCFA â retirer Ã  10x â gain potentiel 5â¯000â¯FCFA. ð</p><p>Ne mise jamais plus de 5â¯% de ton capital pour ce type de pari. ð°</p><p>Utilise-le seulement pour des occasions oÃ¹ ton capital principal est dÃ©jÃ  sÃ©curisÃ©. ð¡ï¸</p><p>Cette stratÃ©gie doit Ãªtre ponctuelle et rÃ©flÃ©chie, jamais systÃ©matique. ð§ </p><p>Elle peut transformer une petite mise en jackpot mais peut aussi tout faire disparaÃ®tre en un tour. ð¨</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<Wallet />} title="7. Gestion du capital"><p>Ne jamais risquer plus de 1â2â¯% du capital par tour. ð°</p><p>Si ton capital est de 50â¯000â¯FCFA, mise max 500â1â¯000â¯FCFA par tour. ð¸</p><p>Cela permet de tenir plusieurs tours mÃªme en cas de pertes consÃ©cutives. ð¡ï¸</p><p>Divise le capital en mini-pools pour gÃ©rer diffÃ©rentes stratÃ©gies en parallÃ¨le. ð</p><p>Cette discipline protÃ¨ge ton capital contre lâadrÃ©naline et lâÃ©motion. ð§ </p><p>Une bonne gestion du capital est le cÅur de toute stratÃ©gie efficace. â¤ï¸</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<TrendingDown />} title="8. Martingale classique"><p>Martingale = double la mise aprÃ¨s chaque perte pour rÃ©cupÃ©rer les pertes prÃ©cÃ©dentes. ð</p><p>Exemple : tour 1 = 500â¯FCFA â perte, tour 2 = 1â¯000â¯FCFA â perte, tour 3 = 2â¯000â¯FCFA â gain. ð°</p><p>Cette technique peut rÃ©cupÃ©rer rapidement tes pertes si tu as un capital suffisant. â</p><p>Mais attention : une longue sÃ©rie de pertes peut rapidement Ã©puiser ton capital. â ï¸</p><p>Câest une stratÃ©gie risquÃ©e et Ã  utiliser seulement avec un capital important. ð¦</p><p>Elle fonctionne mieux sur des multiplicateurs bas et rÃ©guliers. ð</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<Repeat />} title="9. Martingale modifiÃ©e"><p>Pour limiter le risque, ne double pas trop vite tes mises. ð¢</p><p>Exemple : 500 â 1â¯000 â 1â¯500â¯FCFA au lieu de doubler systÃ©matiquement. ð¢</p><p>Cette mÃ©thode permet de rÃ©cupÃ©rer les pertes plus lentement, mais plus sÃ»r. â</p><p>Elle te protÃ¨ge contre des crashes consÃ©cutifs Ã©levÃ©s qui peuvent tout brÃ»ler. ð¥</p><p>Combine-la avec des retraits sÃ©curisÃ©s pour limiter les pertes. ð¤</p><p>Câest une version plus prudente et adaptÃ©e aux petits capitales. ð¡</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<Sigma />} title="10. Fibonacci"><p>Augmente la mise selon la suite de Fibonacci aprÃ¨s chaque perte : 500 â 500 â 1â¯000 â 1â¯500 â 2â¯500. ð¢</p><p>AprÃ¨s un gain, retourne Ã  la mise initiale pour sÃ©curiser ton capital. ð¦</p><p>Câest moins risquÃ© que la martingale classique mais reste efficace pour rÃ©cupÃ©rer des pertes. â</p><p>IdÃ©al pour les joueurs qui observent les tendances et veulent une progression contrÃ´lÃ©e. ð§ </p><p>Tu peux adapter la suite selon ton capital et tes objectifs. ð¯</p><p>Câest une stratÃ©gie solide pour gÃ©rer les sÃ©ries de pertes. ð</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<PieChart />} title="11. Mise fractionnelle"><p>Ne joue jamais ton capital entier sur un tour. ð°</p><p>Mise seulement une fraction du gain potentiel que tu veux atteindre. ð¯</p><p>Exemple : capital 50â¯000â¯FCFA â mise = 10â¯% du gain visÃ©. ð°</p><p>Cela limite la perte en cas de crash et te permet de jouer plus longtemps. â³</p><p>Câest parfait pour diversifier tes paris sur plusieurs multiplicateurs. ð¿</p><p>Tu gardes ainsi le contrÃ´le de ton capital tout en cherchant de gros gains. ð</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<Waypoints />} title="12. Analyse des patterns"><p>Certains jeux affichent lâhistorique des multiplicateurs. ð</p><p>Note les tendances : aprÃ¨s plusieurs tours bas, un multiplicateur Ã©levÃ© est plus probable. ð</p><p>Ne mise pas gros quand le multiplicateur reste constamment bas. ð</p><p>Cherche les cycles ou rÃ©pÃ©titions qui peuvent influencer ton timing. ð</p><p>Ce nâest jamais garanti, mais lâobservation augmente tes chances de gains. ð</p><p>Câest un outil stratÃ©gique que beaucoup de joueurs ignorent. ð¤«</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<Goal />} title="13. Fixer un objectif"><p>DÃ©termine un objectif clair par session, par exemple 10â¯000â¯FCFA de gains. ð¯</p><p>Une fois atteint, arrÃªte de jouer pour sÃ©curiser tes profits. ð</p><p>Cela Ã©vite de tout perdre par excÃ¨s de confiance. ð</p><p>Tu peux aussi dÃ©finir des mini-objectifs pour suivre ta progression. ð©</p><p>Cette discipline transforme un jeu alÃ©atoire en session rentable. ð§ </p><p>Objectifs = motivation + limite psychologique pour contrÃ´ler le jeu. ð§</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<StopCircle />} title="14. Plafond de perte"><p>DÃ©termine combien tu es prÃªt Ã  perdre par session, ex. 20â¯% du capital. ð</p><p>Une fois atteint, stop immÃ©diat. â</p><p>Ãvite les pertes cumulÃ©es qui peuvent dÃ©courager et ruiner ton capital. ð¸</p><p>Cela impose une discipline stricte et protÃ¨ge ton capital sur le long terme. ð¡ï¸</p><p>Combine avec un objectif de gain pour Ã©quilibrer risque et profit. âï¸</p><p>Ne jamais dÃ©passer ton plafond = rÃ¨gle dâor. ð</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<CloudFog />} title="15. Ne pas courir aprÃ¨s les pertes"><p>Perdre plusieurs tours de suite peut dÃ©clencher lâadrÃ©naline. ð¡</p><p>Ne mise pas plus pour tenter de rÃ©cupÃ©rer tes pertes rapidement. ð¨</p><p>Câest la maniÃ¨re la plus rapide de tout perdre. ð</p><p>Fais une pause ou reprends avec des mises sÃ©curisÃ©es. ð§</p><p>Apprendre Ã  accepter les pertes est clÃ© pour un jeu rentable. â</p><p>Le contrÃ´le Ã©motionnel est plus important que la stratÃ©gie technique. ð§ </p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<PieChart />} title="16. Fractionner les mises"><p>Divise ton capital en plusieurs petites mises sur diffÃ©rents multiplicateurs. ð°</p><p>Exemple : 50â¯000â¯FCFA â 5 mises de 1â¯000â¯FCFA + 10 mises de 500â¯FCFA. ð°</p><p>Cela te permet de sÃ©curiser des gains constants tout en tentant des multiplicateurs Ã©levÃ©s. ð</p><p>Chaque mini-mise agit comme un pari indÃ©pendant. ð²</p><p>RÃ©duit le risque global et augmente tes chances de gains cumulÃ©s. âï¸</p><p>Câest une technique que les pros utilisent pour gÃ©rer le capital efficacement. ð¤</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<Target />} title="17. Timing du retrait"><p>Le timing est essentiel : retirer trop tÃ´t = petits gains, trop tard = perte. â³</p><p>Observe la montÃ©e du multiplicateur et fixe un seuil cible par tour. ð</p><p>Exemple : retirer Ã  1,8x pour sÃ©curiser ou Ã  3x pour un peu plus de profit. ð¯</p><p>Adapte selon ton capital et ton objectif de gain. ð§</p><p>Ne jamais baser le timing uniquement sur le feeling. ð§ </p><p>Lâobservation et lâexpÃ©rience permettent de trouver le bon moment pour retirer. â</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<Combine />} title="18. Combinaison des stratÃ©gies"><p>Ne te limite pas Ã  une seule stratÃ©gie. ð¤</p><p>Combine retraits sÃ©curisÃ©s, martingale modifiÃ©e et mises fractionnelles pour Ã©quilibrer risque et gain. âï¸</p><p>Exemple : 70â¯% des mises sÃ©curisÃ©es, 20â¯% en retrait moyen, 10â¯% en gros multiplicateur. ð</p><p>Cela permet de rester rentable mÃªme si certains tours crashent. â</p><p>Tu diversifies tes paris comme un trader gÃ¨re un portefeuille. ð¼</p><p>La combinaison est plus efficace quâune seule stratÃ©gie isolÃ©e. ð</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<Trophy />} title="19. Profiter des bonus"><p>Beaucoup de casinos offrent bonus, free bets ou tours gratuits. ð</p><p>Exemple : 10â¯% bonus sur dÃ©pÃ´t = capital supplÃ©mentaire Ã  jouer sans risque rÃ©el. ð°</p><p>Cela permet de tester des stratÃ©gies ou multiplier tes gains. ð</p><p>Lis toujours les conditions pour ne pas te retrouver piÃ©gÃ©. ð</p><p>Les bonus peuvent transformer une session moyenne en session rentable. â¨</p><p>Câest une ressource sous-utilisÃ©e par la plupart des joueurs. ð¤«</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<BarChart />} title="20. Suivi des gains"><p>Note chaque tour : mise, multiplicateur, gain/perte. ð</p><p>Exemple : tableau Excel pour suivre les rÃ©sultats en FCFA. ð</p><p>Tu verras les patterns et lâefficacitÃ© de tes stratÃ©gies. ð</p><p>Cela permet dâajuster ton approche en temps rÃ©el. ð§</p><p>Le suivi rend le jeu moins alÃ©atoire et plus scientifique. ð§ª</p><p>Câest la base pour Ã©voluer vers un joueur disciplinÃ© et rentable. ð¨âð«</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<ShieldCheck />} title="21. Discipline"><p>Respecte strictement limites de mise, plafond de perte et objectifs de gain. ð</p><p>Ne change jamais de stratÃ©gie sous lâeffet des Ã©motions. ð§</p><p>Les joueurs impulsifs perdent rapidement tout leur capital. ð¸</p><p>La discipline est plus importante que la chance. ð§ </p><p>Ãtablir des rÃ¨gles avant de jouer te protÃ¨ge de lâexcÃ¨s de confiance. ð¡ï¸</p><p>Elle transforme un jeu de hasard en jeu gÃ©rÃ© et stratÃ©gique. âï¸</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<PauseCircle />} title="22. Pauses rÃ©guliÃ¨res"><p>Jouer fatiguÃ© = dÃ©cisions mauvaises = pertes assurÃ©es. ð´</p><p>Fais des pauses toutes les 15â30 minutes pour rester lucide. â</p><p>Profite-en pour analyser les tours prÃ©cÃ©dents et ajuster tes stratÃ©gies. ð</p><p>Respire, Ã©loigne-toi de lâÃ©cran et reviens avec un esprit clair. ð¬ï¸</p><p>Les pros ne jouent jamais en continu sans repos. ð«</p><p>Le mental est ton meilleur alliÃ© pour maximiser tes gains. ðª</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<BrainCircuit />} title="23. Mental fort"><p>Reste calme face aux pertes et aux gains rapides. ð§ââï¸</p><p>Ne laisse pas lâadrÃ©naline influencer tes dÃ©cisions. ð¤</p><p>Accepte que le hasard fera toujours partie du jeu. â</p><p>La constance mentale permet de rester rentable sur le long terme. ð</p><p>Prends des notes, analyse, ajuste et continue avec discipline. ð</p><p>Le mental fort fait la diffÃ©rence entre un joueur chanceux et un joueur rentable. ð</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<Wrench />} title="24. Ajuster la stratÃ©gie"><p>Ne reste pas bloquÃ© sur une mÃ©thode qui ne fonctionne pas. ð</p><p>Observe, teste, corrige et adapte ton approche. ð§ </p><p>Exemple : rÃ©duire multiplicateur cible si les crashes arrivent trop tÃ´t. ð</p><p>Changer la taille des mises selon la sÃ©rie de gains ou pertes. ð°</p><p>La flexibilitÃ© est un atout majeur dans les jeux de hasard. ð¤¸ââï¸</p><p>Un joueur qui sâadapte survivra plus longtemps et fera plus de profits. â</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<TableIcon />} title="25. Exemple concret en FCFA"><pre className="font-mono text-xs whitespace-pre-wrap bg-background/50 p-2 rounded-md">{`Tour | Mise  | Multiplicateur cible | Gain potentiel          | Action
-----|-------|----------------------|-------------------------|------------------------------
1    | 500   | 1,8x                 | 900                     | Retirer tÃ´t
2    | 500   | 2,5x                 | 1 250                   | Retirer moyen
3    | 500   | 5x                   | 2 500                   | Retirer Ã  3x â 1 500
4    | 200   | 10x                  | 2 000                   | RisquÃ©
5    | 1000  | 1,5x                 | 1 500                   | Retirer tÃ´t`}</pre><p className="mt-2">Chaque tour doit Ãªtre planifiÃ©. Note les rÃ©sultats, ajuste et reste disciplinÃ© pour maximiser les gains et transformer un jeu alÃ©atoire en jeu stratÃ©gique.</p></StrategyGuideStep>
                                                    <StrategyGuideStep icon={<Trophy />} title="Conclusion"><p>Les jeux crash restent des jeux de hasard, mais une stratÃ©gie disciplinÃ©e, un capital bien gÃ©rÃ© et un mental fort permettent de maximiser les gains et limiter les pertes. ð§ ð¡ï¸ð</p><p>Points clÃ©s : commence petit, sÃ©curise tes gains, fixe tes limites, note et analyse chaque session. â</p><p>La patience et la discipline sont plus puissantes que la chance. ðª</p><p>Combine plusieurs stratÃ©gies, observe les patterns, profite des bonus et prends des pauses rÃ©guliÃ¨res. ðððð§ââï¸</p><p>Avec cette approche, tu passes dâun joueur impulsif Ã  un joueur rÃ©flÃ©chi, rentable et durable. ð¨âð«</p><p>Ton capital devient un outil pour gÃ©nÃ©rer des gains rÃ©guliers, tout en minimisant le risque de tout perdre. ð</p></StrategyGuideStep>
                                                </div>
                                                </TabsContent>
                                            </Tabs>
                                        </DialogContent>
                                    </Dialog>
                                </TooltipTrigger>
                                <TooltipContent><p>Guide d'utilisation</p></TooltipContent>
                            </Tooltip>
                        </TooltipProvider>
                    </motion.div>
                    <motion.div variants={fabItemVariants} custom={0} className="absolute bottom-0 right-0">
                         <TooltipProvider>
                            <Tooltip>
                                <TooltipTrigger asChild>
                                    <a href="https://t.me/Jet_Predict_Bot" target="_blank" rel="noopener noreferrer">
                                        <Button className="h-14 w-14 rounded-full bg-gradient-to-br from-sky-500 to-blue-500 text-white shadow-lg shadow-blue-500/40">
                                            <TelegramIcon className="h-7 w-7" />
                                        </Button>
                                    </a>
                                </TooltipTrigger>
                                <TooltipContent><p>Ouvrir le bot Telegram</p></TooltipContent>
                            </Tooltip>
                         </TooltipProvider>
                    </motion.div>
                </motion.div>
            )}
        </AnimatePresence>

        <motion.button
            onClick={() => setIsFabMenuOpen(!isFabMenuOpen)}
            className="relative h-16 w-16 rounded-full bg-foreground text-background shadow-lg shadow-black/30 dark:shadow-white/20 flex items-center justify-center"
            whileTap={{ scale: 0.9 }}
        >
            <motion.div
                animate={{ rotate: isFabMenuOpen ? 45 : 0 }}
                transition={{ type: 'spring', stiffness: 400, damping: 20 }}
            >
                <Plus size={32} />
            </motion.div>
        </motion.button>
    </motion.div>
    </div>
  );
}
